<Window x:Class="EvernoteClone.View.NotesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:uc="clr-namespace:EvernoteClone.View.UserControls"
        xmlns:vm="clr-namespace:EvernoteClone.ViewModel"
        mc:Ignorable="d"
        Title="NotesWindow" Height="450" Width="800">

    <Window.Resources>
        <vm:NotesViewModel x:Key="NotesVM" />
    </Window.Resources>

    <DockPanel DataContext="{StaticResource NotesVM}">
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem Header="New notebook"
                          Command="{Binding NewNotebookCommand}" />
                <MenuItem Header="New note"
                          Command="{Binding NewNoteCommand}"
                          CommandParameter="{Binding SelectedNotebook}" />
                <Separator />
                <MenuItem Header="Exit"
                          Click="MenuItem_Click" />
            </MenuItem>
        </Menu>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem>
                <TextBlock x:Name="statusTextBlock" />
            </StatusBarItem>
        </StatusBar>
        <ListView DockPanel.Dock="Left"
                  Background="MidnightBlue"
                  Width="140"
                  SelectedValue="{Binding SelectedNotebook, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  ItemsSource="{Binding Notebooks}">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <!--Bind the entire object over to the user control we created-->
                        <uc:DisplayNotebook Notebook="{Binding}">
                            <uc:DisplayNotebook.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Rename"
                                              Command="{Binding Source={StaticResource NotesVM}, Path=EditCommand}"/>
                                </ContextMenu>
                            </uc:DisplayNotebook.ContextMenu>
                        </uc:DisplayNotebook>
                        <TextBox Text="{Binding Name}"
                                 Visibility="{Binding Source={StaticResource NotesVM}, Path=IsVisible}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="LostFocus">
                                    <!--EventName is the name of the event inside the TextBox that when that event is fired, then it will trigger a command-->
                                    <!--You have to use the behaviour nuget library to accomplish this as the default WPF doesnt allow you to bind a command to a event.-->
                                    <i:InvokeCommandAction Command="{Binding Source={StaticResource NotesVM}, Path=EndEditingCommand}"
                                                           CommandParameter="{Binding}"/> <!--Binding the entire notebook object and passed as the parameter to the Execute method-->
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <ListView DockPanel.Dock="Left"
                  Width="140"
                  ItemsSource="{Binding Notes}">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <uc:DisplayNote Note="{Binding}" />
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
        <ToolBarTray DockPanel.Dock="Top">
            <ToolBar>
                <Button Content="Speech"
                        Click="SpeechButton_Click" />
                <ToggleButton x:Name="boldButton"
                        Click="boldButton_Click">
                    <TextBlock Text="B"
                               FontWeight="Bold" />
                </ToggleButton>
                <ToggleButton x:Name="italicButton"
                        Click="italicButton_Click">
                    <TextBlock Text="I"
                               FontStyle="Italic" />
                </ToggleButton>
                <ToggleButton x:Name="underlineButton"
                        Click="underlineButton_Click">
                    <TextBlock Text="U"
                               TextDecorations="Underline" />
                </ToggleButton>
                <ComboBox x:Name="fontFamilyComboBox"
                          Width="100"
                          SelectionChanged="fontFamilyComboBox_SelectionChanged" />
                <ComboBox x:Name="fontSizeComboBox"
                          Width="50"
                          IsEditable="True"
                          TextBoxBase.TextChanged="fontSizeComboBox_TextChanged" />
            </ToolBar>
        </ToolBarTray>
        <Grid>
            <RichTextBox x:Name="contentRichTextBox"
                         TextChanged="contentRichTextBox_TextChanged"
                         SelectionChanged="contentRichTextBox_SelectionChanged" />
        </Grid>
    </DockPanel>
</Window>